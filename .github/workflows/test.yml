name: Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: nexusql_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: nexusql_test
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: TestPass123!
          MSSQL_PID: Developer
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P TestPass123! -Q 'SELECT 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unixodbc-dev

        # Install Microsoft ODBC Driver for SQL Server
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Wait for databases to be ready
      run: |
        # Wait for PostgreSQL
        until pg_isready -h localhost -p 5432 -U testuser; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

        # Wait for MySQL
        until mysqladmin ping -h 127.0.0.1 -P 3306 -u testuser -ptestpass --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done

        # Wait for MSSQL
        sleep 10
        echo "Databases are ready"

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short --cov=nexusql --cov-report=xml --cov-report=term

    - name: Run integration tests
      env:
        TEST_POSTGRESQL_URL: "postgresql://testuser:testpass@localhost:5432/nexusql_test"
        TEST_MYSQL_URL: "mysql://testuser:testpass@localhost:3306/nexusql_test"
        TEST_MSSQL_URL: "mssql://sa:TestPass123!@localhost:1433/master?TrustServerCertificate=yes"
      run: |
        pytest tests/integration/ -v --tb=short --cov=nexusql --cov-append --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy
        pip install -e ".[dev]"

    - name: Run ruff
      run: ruff check nexusql/ tests/ || true

    - name: Run mypy
      run: mypy nexusql/ --ignore-missing-imports || true
