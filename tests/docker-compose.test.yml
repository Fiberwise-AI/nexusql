services:
  postgres:
    image: postgres:15-alpine
    container_name: ia_modules_test_postgres
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: ia_modules_test
    ports:
      - "15432:5432"  # Changed to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8
    container_name: ia_modules_test_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
      MYSQL_DATABASE: ia_modules_test
    ports:
      - "13306:3306"  # Changed to avoid conflicts
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "testuser", "-ptestpass"]
      interval: 5s
      timeout: 5s
      retries: 10

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ia_modules_test_mssql
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: TestPass123!
      MSSQL_PID: Express
    ports:
      - "11433:1433"  # Changed to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P TestPass123! -Q 'SELECT 1' -C"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: ia_modules_test_redis
    ports:
      - "16379:6379"  # Changed to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Observability Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: ia_modules_test_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "19090:9090"  # Changed to avoid conflicts
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:latest
    container_name: ia_modules_test_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "13001:3000"  # Changed to avoid conflicts
    volumes:
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: ia_modules_test_otel
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./observability/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "14317:4317"   # OTLP gRPC receiver (changed to avoid conflicts)
      - "14318:4318"   # OTLP HTTP receiver (changed to avoid conflicts)
      - "18888:8888"   # Prometheus metrics exposed by the collector
      - "18889:8889"   # Prometheus exporter metrics
      - "23133:13133" # health_check extension
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:13133/"]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    # Using Jaeger v2 (EOL for v1 is Dec 31, 2025)
    # https://www.jaegertracing.io/download/
    # NOTE: Jaeger v2 maintains API compatibility with v1
    # OTLP ports mapped to 4319/4320 to avoid conflict with otel-collector (4317/4318)
    image: jaegertracing/jaeger:latest
    container_name: ia_modules_test_jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI (also used for health check)
      - "14268:14268"  # Jaeger collector HTTP
      - "14250:14250"  # Jaeger collector gRPC
      - "4319:4317"    # OTLP gRPC (mapped to 4319 to avoid conflict)
      - "4320:4318"    # OTLP HTTP (mapped to 4320 to avoid conflict)
      - "6831:6831/udp" # Jaeger agent (legacy)
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  prometheus_data:
  grafana_data:
